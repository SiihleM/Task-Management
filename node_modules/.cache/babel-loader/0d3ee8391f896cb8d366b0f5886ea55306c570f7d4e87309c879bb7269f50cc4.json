{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tulani.Mtshwelo\\\\Task-Management\\\\src\\\\components\\\\CalendarView.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CalendarView({\n  tasks\n}) {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  // Get first day of the month\n  const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n  // Get last day of the month\n  const lastDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\n  // Get day of week for first day (0=Sunday, 6=Saturday)\n  const startDay = firstDayOfMonth.getDay();\n\n  // Generate array of dates to display in calendar grid (including previous month's trailing days)\n  const daysInMonth = lastDayOfMonth.getDate();\n  const totalCells = Math.ceil((startDay + daysInMonth) / 7) * 7;\n\n  // Helper to format date to YYYY-MM-DD\n  const formatDate = date => date.toISOString().split('T')[0];\n\n  // Group tasks by due date\n  const tasksByDate = tasks.reduce((acc, task) => {\n    if (!task.dueDate) return acc;\n    if (!acc[task.dueDate]) acc[task.dueDate] = [];\n    acc[task.dueDate].push(task);\n    return acc;\n  }, {});\n\n  // Handlers for month navigation\n  const prevMonth = () => {\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1));\n  };\n  const nextMonth = () => {\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1));\n  };\n\n  // Generate calendar cells\n  const calendarCells = [];\n  for (let i = 0; i < totalCells; i++) {\n    const dayNumber = i - startDay + 1;\n    let cellDate = null;\n    if (dayNumber > 0 && dayNumber <= daysInMonth) {\n      cellDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), dayNumber);\n    }\n    calendarCells.push(cellDate);\n  }\n\n  // Weekday labels\n  const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"calendar-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [currentDate.toLocaleString('default', {\n        month: 'long'\n      }), \" \", currentDate.getFullYear()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevMonth,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextMonth,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\",\n      style: {\n        gridTemplateColumns: 'repeat(7, 1fr)'\n      },\n      children: [weekdays.map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontWeight: 'bold',\n          textAlign: 'center',\n          padding: '5px 0'\n        },\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)), calendarCells.map((date, idx) => {\n        if (!date) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"calendar-day\",\n            style: {\n              backgroundColor: '#f0f0f0'\n            }\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 20\n          }, this);\n        }\n        const dateStr = formatDate(date);\n        const dayTasks = tasksByDate[dateStr] || [];\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"calendar-day\",\n          style: {\n            minHeight: '80px',\n            textAlign: 'left',\n            padding: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: date.getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), dayTasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-box\",\n            title: task.title,\n            children: task.title\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this))]\n        }, dateStr, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(CalendarView, \"jlRD8Xn8VFdQnzpYmYXrLX8M9Sw=\");\n_c = CalendarView;\nexport default CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CalendarView","tasks","_s","currentDate","setCurrentDate","Date","firstDayOfMonth","getFullYear","getMonth","lastDayOfMonth","startDay","getDay","daysInMonth","getDate","totalCells","Math","ceil","formatDate","date","toISOString","split","tasksByDate","reduce","acc","task","dueDate","push","prevMonth","nextMonth","calendarCells","i","dayNumber","cellDate","weekdays","className","children","toLocaleString","month","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","marginBottom","onClick","gridTemplateColumns","map","day","fontWeight","textAlign","padding","idx","backgroundColor","dateStr","dayTasks","minHeight","title","id","_c","$RefreshReg$"],"sources":["C:/Users/Tulani.Mtshwelo/Task-Management/src/components/CalendarView.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction CalendarView({ tasks }) {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n  // Get first day of the month\r\n  const firstDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\r\n  // Get last day of the month\r\n  const lastDayOfMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0);\r\n  // Get day of week for first day (0=Sunday, 6=Saturday)\r\n  const startDay = firstDayOfMonth.getDay();\r\n\r\n  // Generate array of dates to display in calendar grid (including previous month's trailing days)\r\n  const daysInMonth = lastDayOfMonth.getDate();\r\n  const totalCells = Math.ceil((startDay + daysInMonth) / 7) * 7;\r\n\r\n  // Helper to format date to YYYY-MM-DD\r\n  const formatDate = (date) => date.toISOString().split('T')[0];\r\n\r\n  // Group tasks by due date\r\n  const tasksByDate = tasks.reduce((acc, task) => {\r\n    if (!task.dueDate) return acc;\r\n    if (!acc[task.dueDate]) acc[task.dueDate] = [];\r\n    acc[task.dueDate].push(task);\r\n    return acc;\r\n  }, {});\r\n\r\n  // Handlers for month navigation\r\n  const prevMonth = () => {\r\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1));\r\n  };\r\n\r\n  const nextMonth = () => {\r\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1));\r\n  };\r\n\r\n  // Generate calendar cells\r\n  const calendarCells = [];\r\n  for (let i = 0; i < totalCells; i++) {\r\n    const dayNumber = i - startDay + 1;\r\n    let cellDate = null;\r\n    if (dayNumber > 0 && dayNumber <= daysInMonth) {\r\n      cellDate = new Date(currentDate.getFullYear(), currentDate.getMonth(), dayNumber);\r\n    }\r\n    calendarCells.push(cellDate);\r\n  }\r\n\r\n  // Weekday labels\r\n  const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n  return (\r\n    <section className=\"calendar-view\">\r\n      <h2>\r\n        {currentDate.toLocaleString('default', { month: 'long' })} {currentDate.getFullYear()}\r\n      </h2>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '10px' }}>\r\n        <button onClick={prevMonth}>Previous</button>\r\n        <button onClick={nextMonth}>Next</button>\r\n      </div>\r\n      <div className=\"calendar-grid\" style={{ gridTemplateColumns: 'repeat(7, 1fr)' }}>\r\n        {weekdays.map((day) => (\r\n          <div key={day} style={{ fontWeight: 'bold', textAlign: 'center', padding: '5px 0' }}>\r\n            {day}\r\n          </div>\r\n        ))}\r\n        {calendarCells.map((date, idx) => {\r\n          if (!date) {\r\n            return <div key={idx} className=\"calendar-day\" style={{ backgroundColor: '#f0f0f0' }}></div>;\r\n          }\r\n          const dateStr = formatDate(date);\r\n          const dayTasks = tasksByDate[dateStr] || [];\r\n          return (\r\n            <div key={dateStr} className=\"calendar-day\" style={{ minHeight: '80px', textAlign: 'left', padding: '5px' }}>\r\n              <strong>{date.getDate()}</strong>\r\n              {dayTasks.map((task) => (\r\n                <div key={task.id} className=\"task-box\" title={task.title}>\r\n                  {task.title}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CalendarView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}