{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asanda.Mbangata\\\\Documents\\\\GitHub\\\\Task-Management\\\\src\\\\components\\\\TaskComments.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskComments({\n  comments = [],\n  addComment\n}) {\n  _s();\n  const [newComment, setNewComment] = useState('');\n  const handleAddComment = () => {\n    if (newComment.trim() === '') return;\n    addComment(newComment.trim());\n    setNewComment('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '15px',\n      padding: '10px',\n      borderTop: '1px solid #ccc'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), comments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No comments yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        paddingLeft: 0\n      },\n      children: comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          marginBottom: '8px',\n          backgroundColor: '#f1f1f1',\n          padding: '8px',\n          borderRadius: '6px'\n        },\n        children: comment\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '10px',\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newComment,\n        onChange: e => setNewComment(e.target.value),\n        placeholder: \"Add a comment\",\n        style: {\n          flex: 1,\n          padding: '8px',\n          borderRadius: '6px',\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        style: {\n          padding: '8px 12px',\n          borderRadius: '6px',\n          backgroundColor: '#764ba2',\n          color: '#fff',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskComments, \"4CPgt7oQpkJXYA7nM53m+f+bai8=\");\n_c = TaskComments;\nexport default TaskComments;\nvar _c;\n$RefreshReg$(_c, \"TaskComments\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskComments","comments","addComment","_s","newComment","setNewComment","handleAddComment","trim","style","marginTop","padding","borderTop","children","fileName","_jsxFileName","lineNumber","columnNumber","length","listStyleType","paddingLeft","map","comment","index","marginBottom","backgroundColor","borderRadius","display","gap","type","value","onChange","e","target","placeholder","flex","border","onClick","color","cursor","_c","$RefreshReg$"],"sources":["C:/Users/Asanda.Mbangata/Documents/GitHub/Task-Management/src/components/TaskComments.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction TaskComments({ comments = [], addComment }) {\r\n  const [newComment, setNewComment] = useState('');\r\n\r\n  const handleAddComment = () => {\r\n    if (newComment.trim() === '') return;\r\n    addComment(newComment.trim());\r\n    setNewComment('');\r\n  };\r\n\r\n  return (\r\n    <div style={{ marginTop: '15px', padding: '10px', borderTop: '1px solid #ccc' }}>\r\n      <h3>Comments</h3>\r\n      {comments.length === 0 ? (\r\n        <p>No comments yet.</p>\r\n      ) : (\r\n        <ul style={{ listStyleType: 'none', paddingLeft: 0 }}>\r\n          {comments.map((comment, index) => (\r\n            <li key={index} style={{ marginBottom: '8px', backgroundColor: '#f1f1f1', padding: '8px', borderRadius: '6px' }}>\r\n              {comment}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n      <div style={{ display: 'flex', gap: '10px', marginTop: '10px' }}>\r\n        <input\r\n          type=\"text\"\r\n          value={newComment}\r\n          onChange={(e) => setNewComment(e.target.value)}\r\n          placeholder=\"Add a comment\"\r\n          style={{ flex: 1, padding: '8px', borderRadius: '6px', border: '1px solid #ccc' }}\r\n        />\r\n        <button onClick={handleAddComment} style={{ padding: '8px 12px', borderRadius: '6px', backgroundColor: '#764ba2', color: '#fff', border: 'none', cursor: 'pointer' }}>\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskComments;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}