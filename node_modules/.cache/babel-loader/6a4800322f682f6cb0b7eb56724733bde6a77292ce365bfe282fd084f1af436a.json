{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tulani.Mtshwelo\\\\Task-Management\\\\src\\\\components\\\\Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Settings() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    currentPassword: '',\n    newPassword: '',\n    emailNotifications: true,\n    pushNotifications: false\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: type === 'checkbox' ? checked : value\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // For now, just log the form data. In a real app, submit to backend.\n    console.log('Settings saved:', formData);\n    alert('Settings saved successfully!');\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"settings-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Account Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"name\",\n          name: \"name\",\n          placeholder: \"Lily Bloom\",\n          value: formData.name,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          placeholder: \"lily@example.com\",\n          value: formData.email,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Change Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"current-password\",\n          children: \"Current Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"current-password\",\n          name: \"currentPassword\",\n          value: formData.currentPassword,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"new-password\",\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"new-password\",\n          name: \"newPassword\",\n          value: formData.newPassword,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"Notifications\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"emailNotifications\",\n            checked: formData.emailNotifications,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), \"Enable Email Notifications\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"pushNotifications\",\n            checked: formData.pushNotifications,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), \"Enable Push Notifications\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Settings, \"sxcRTgU1VxXdJXTCbU+E7y9PC2s=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Settings","_s","formData","setFormData","name","email","currentPassword","newPassword","emailNotifications","pushNotifications","handleChange","e","value","type","checked","target","prevData","handleSubmit","preventDefault","console","log","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","id","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Tulani.Mtshwelo/Task-Management/src/components/Settings.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Settings() {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    currentPassword: '',\r\n    newPassword: '',\r\n    emailNotifications: true,\r\n    pushNotifications: false,\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // For now, just log the form data. In a real app, submit to backend.\r\n    console.log('Settings saved:', formData);\r\n    alert('Settings saved successfully!');\r\n  };\r\n\r\n  return (\r\n    <section className=\"settings-page\">\r\n      <h2>Settings</h2>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <fieldset>\r\n          <legend>Account Info</legend>\r\n          <label htmlFor=\"name\">Full Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            placeholder=\"Lily Bloom\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"lily@example.com\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n          <legend>Change Password</legend>\r\n          <label htmlFor=\"current-password\">Current Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"current-password\"\r\n            name=\"currentPassword\"\r\n            value={formData.currentPassword}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <label htmlFor=\"new-password\">New Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"new-password\"\r\n            name=\"newPassword\"\r\n            value={formData.newPassword}\r\n            onChange={handleChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n          <legend>Notifications</legend>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"emailNotifications\"\r\n              checked={formData.emailNotifications}\r\n              onChange={handleChange}\r\n            />\r\n            Enable Email Notifications\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"pushNotifications\"\r\n              checked={formData.pushNotifications}\r\n              onChange={handleChange}\r\n            />\r\n            Enable Push Notifications\r\n          </label>\r\n        </fieldset>\r\n\r\n        <button type=\"submit\">Save Changes</button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}